@model Sakhaa.Models.GiftDonation

@{
    ViewData["Title"] = "دفع التبرع";
}

@section HeaderTitle {
    <h2 class="section">إتمام عملية الدفع</h2>
}

<div class="payment-container section">
    <div class="payment-summary">
        <h3><i class="fa-solid fa-receipt"></i> ملخص التبرع</h3>
        <div class="summary-details">
            <div class="summary-row">
                <span>المتبرع:</span>
                <span>@Model.GiverName</span>
            </div>
            <div class="summary-row">
                <span>المهدى إليه:</span>
                <span>@Model.ReceiverName</span>
            </div>
            <div class="summary-row highlight">
                <span>المبلغ الإجمالي:</span>
                <span>@Model.Amount د.أ</span>
            </div>
        </div>
    </div>

    <div class="payment-method-selection">
        <h3><i class="fa-solid fa-credit-card"></i> طريقة الدفع</h3>
        
        <form id="paymentForm" asp-controller="Donation" asp-action="CompleteGiftPayment" method="post">
            <input type="hidden" name="giftDonationId" value="@Model.Id" />
            
            <div class="payment-methods">
                <div class="payment-method active" data-method="creditCard">
                    <i class="fa-solid fa-credit-card"></i>
                    <span>بطاقة ائتمان</span>
                </div>
                <div class="payment-method" data-method="bank">
                    <i class="fa-solid fa-building-columns"></i>
                    <span>تحويل بنكي</span>
                </div>
                <div class="payment-method" data-method="wallet">
                    <i class="fa-solid fa-wallet"></i>
                    <span>محفظة إلكترونية</span>
                </div>
            </div>
            
            <div class="payment-details" id="creditCardDetails">
                <div class="form-group">
                    <label for="cardNumber">رقم البطاقة</label>
                    <input type="text" id="cardNumber" name="cardNumber" placeholder="xxxx-xxxx-xxxx-xxxx" maxlength="19" required>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="cardHolder">اسم حامل البطاقة</label>
                        <input type="text" id="cardHolder" name="cardHolder" placeholder="الاسم كما يظهر على البطاقة" required>
                    </div>
                    <div class="form-group">
                        <label for="cvv">رمز الأمان CVV</label>
                        <input type="text" id="cvv" name="cvv" placeholder="123" required maxlength="3">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="expiryDate">تاريخ انتهاء الصلاحية</label>
                        <input type="text" id="expiryDate" placeholder="MM/YY" maxlength="5" required>
                        <input type="hidden" id="expiryMonth" name="expiryMonth" value="12">
                        <input type="hidden" id="expiryYear" name="expiryYear" value="25">
                    </div>
                </div>
            </div>
            
            <div class="payment-details hidden" id="bankDetails">
                <div class="bank-info">
                    <p>يرجى تحويل المبلغ إلى الحساب التالي:</p>
                    <p><strong>اسم البنك:</strong> بنك سخاء</p>
                    <p><strong>رقم الحساب:</strong> 1234567890</p>
                    <p><strong>IBAN:</strong> SA00 1234 5678 9012 3456 7890</p>
                    <p><strong>اسم المستفيد:</strong> مؤسسة سخاء الخيرية</p>
                </div>
                <div class="form-group">
                    <label for="transferReceipt">إيصال التحويل</label>
                    <input type="file" id="transferReceipt" name="transferReceipt">
                </div>
            </div>
            
            <div class="payment-details hidden" id="walletDetails">
                <div class="form-group">
                    <label for="walletType">نوع المحفظة</label>
                    <select id="walletType" name="walletType">
                        <option value="" disabled selected>اختر نوع المحفظة</option>
                        <option value="stcPay">STC Pay</option>
                        <option value="urPay">UrPay</option>
                        <option value="payPal">PayPal</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="walletNumber">رقم المحفظة</label>
                    <input type="text" id="walletNumber" name="walletNumber" placeholder="أدخل رقم المحفظة">
                </div>
            </div>
            
            <div class="submit-container">
                <button type="submit" class="payment-btn">إتمام عملية الدفع</button>
            </div>
        </form>
    </div>
</div>

<style>
    .payment-container {
        display: flex;
        flex-direction: column;
        gap: 40px;
        padding: 30px;
        background-color: #FAFAFA;
        border-radius: 15px;
        box-shadow: 0 0 10px rgba(64, 87, 18, 0.3);
    }
    
    .payment-summary, .payment-method-selection {
        background-color: white;
        padding: 25px;
        border-radius: 15px;
        box-shadow: 0 0 10px rgba(64, 87, 18, 0.1);
    }
    
    .payment-summary h3, .payment-method-selection h3 {
        color: #A31621;
        border-bottom: 2px solid #DAA520;
        padding-bottom: 10px;
        margin-bottom: 20px;
    }
    
    .summary-details {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }
    
    .summary-row {
        display: flex;
        justify-content: space-between;
        padding: 10px 0;
        border-bottom: 1px solid #eee;
    }
    
    .highlight {
        font-weight: bold;
        font-size: 1.1rem;
        color: #405712;
    }
    
    .payment-methods {
        display: flex;
        gap: 20px;
        margin-bottom: 30px;
    }
    
    .payment-method {
        flex: 1;
        background-color: #f5f5f5;
        padding: 15px;
        border-radius: 10px;
        cursor: pointer;
        text-align: center;
        transition: all 0.3s ease;
        border: 2px solid transparent;
    }
    
    .payment-method.active {
        background-color: rgba(218, 165, 32, 0.2);
        border-color: #DAA520;
    }
    
    .payment-method i {
        display: block;
        font-size: 1.5rem;
        margin-bottom: 10px;
    }
    
    .payment-details {
        margin-top: 20px;
    }
    
    .form-row {
        display: flex;
        gap: 20px;
    }
    
    .form-row .form-group {
        flex: 1;
    }
    
    .form-group {
        margin-bottom: 20px;
    }
    
    .form-group label {
        display: block;
        margin-bottom: 8px;
        color: #405712;
    }
    
    .form-group input, .form-group select {
        width: 100%;
        padding: 12px;
        border: 2px solid #ddd;
        border-radius: 10px;
        font-family: 'Cairo', sans-serif;
    }
    
    .form-group input:focus, .form-group select:focus {
        outline: none;
        border-color: #DAA520;
    }
    
    .bank-info {
        background-color: #f9f9f9;
        padding: 15px;
        border-radius: 10px;
        margin-bottom: 20px;
    }
    
    .bank-info p {
        margin: 10px 0;
    }
    
    .hidden {
        display: none;
    }
    
    .submit-container {
        margin-top: 30px;
        text-align: center;
    }
    
    .payment-btn {
        background-color: #DAA520;
        color: white;
        border: none;
        padding: 15px 40px;
        font-size: 1.1rem;
        border-radius: 30px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-family: 'Cairo', sans-serif;
    }
    
    .payment-btn:hover {
        background-color: #405712;
    }
    
    @@media (max-width: 768px) {
        .payment-methods {
            flex-direction: column;
        }
        
        .form-row {
            flex-direction: column;
            gap: 0;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const paymentMethods = document.querySelectorAll('.payment-method');
        const paymentDetails = document.querySelectorAll('.payment-details');
        
        paymentMethods.forEach(method => {
            method.addEventListener('click', function() {
                paymentMethods.forEach(m => m.classList.remove('active'));
                
                this.classList.add('active');
                
                paymentDetails.forEach(detail => detail.classList.add('hidden'));
                
                const methodType = this.getAttribute('data-method');
                document.getElementById(methodType + 'Details').classList.remove('hidden');
            });
        });
        
        const cardNumberInput = document.getElementById('cardNumber');
        if (cardNumberInput) {
            cardNumberInput.addEventListener('input', function(e) {
                let value = e.target.value.replace(/\D/g, '');
                if (value.length > 16) {
                    value = value.substr(0, 16);
                }
                
                let formattedValue = '';
                for (let i = 0; i < value.length; i++) {
                    if (i > 0 && i % 4 === 0) {
                        formattedValue += '-';
                    }
                    formattedValue += value[i];
                }
                
                e.target.value = formattedValue;
            });
        }
        
        const cvvInput = document.getElementById('cvv');
        if (cvvInput) {
            cvvInput.addEventListener('input', function(e) {
                e.target.value = e.target.value.replace(/\D/g, '');
            });
        }
        
        const expiryDateInput = document.getElementById('expiryDate');
        const expiryMonthInput = document.getElementById('expiryMonth');
        const expiryYearInput = document.getElementById('expiryYear');
        
        if (expiryDateInput) {
            expiryDateInput.addEventListener('input', function(e) {
                let value = e.target.value.replace(/\D/g, '');
                
                if (value.length > 0) {
                    let month = value.substring(0, 2);
                    if (month.length === 1) {
                        e.target.value = month;
                        return;
                    }
                    
                    if (month > 12) {
                        month = '12';
                    } else if (month < 1) {
                        month = '01';
                    }
                    
                    expiryMonthInput.value = month;
                    
                    if (value.length > 2) {
                        let year = value.substring(2, 4);
                        e.target.value = month + '/' + year;
                        
                        expiryYearInput.value = year;
                    } else {
                        e.target.value = month;
                    }
                }
            });
        }
        
        const paymentForm = document.getElementById('paymentForm');
        if (paymentForm) {
            paymentForm.addEventListener('submit', function(e) {
                const activeMethod = document.querySelector('.payment-method.active');
                if (!activeMethod) {
                    e.preventDefault();
                    alert('الرجاء اختيار طريقة الدفع');
                    return;
                }
                
                const methodType = activeMethod.getAttribute('data-method');
                
                if (methodType === 'creditCard') {
                    const cardNumber = cardNumberInput.value.replace(/\D/g, '');
                    if (cardNumber.length < 13 || cardNumber.length > 16) {
                        e.preventDefault();
                        alert('الرجاء إدخال رقم بطاقة صحيح');
                        return;
                    }
                    
                    const cvv = cvvInput.value;
                    if (cvv.length !== 3) {
                        e.preventDefault();
                        alert('الرجاء إدخال رمز أمان صحيح (3 أرقام)');
                        return;
                    }
                    
                    const expiryDate = expiryDateInput.value;
                    if (!/^\d{2}\/\d{2}$/.test(expiryDate)) {
                        e.preventDefault();
                        alert('الرجاء إدخال تاريخ انتهاء صحيح بصيغة MM/YY');
                        return;
                    }
                    
                    const [expMonth, expYear] = expiryDate.split('/');
                    expiryMonthInput.value = parseInt(expMonth, 10);
                    expiryYearInput.value = parseInt(expYear, 10);
                }
                else if (methodType === 'wallet') {
                    const walletType = document.getElementById('walletType').value;
                    const walletNumber = document.getElementById('walletNumber').value;
                    
                    if (!walletType) {
                        e.preventDefault();
                        alert('الرجاء اختيار نوع المحفظة');
                        return;
                    }
                    
                    if (!walletNumber) {
                        e.preventDefault();
                        alert('الرجاء إدخال رقم المحفظة');
                        return;
                    }
                }
            });
        }
    });
</script> 
 